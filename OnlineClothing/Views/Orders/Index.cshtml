@model IEnumerable<OnlineClothing.Models.Order>

@{
    ViewData["Title"] = "Orders";
    string defaultTab = "delivered";  // Default tab
}

<h1 class="text-center my-4 fw-bold text-dark">My Orders</h1>

<!-- Custom Tab Navigation -->
<ul class="nav nav-tabs justify-content-center border-0 gap-2" id="orderTabs" role="tablist">
    @foreach (var status in new[] { "Pending Confirmation", "Confirmed", "Shipping", "Delivered", "Cancelled", "Returned" })
    {
        string tabId = status.Replace(" ", "").ToLower();
        <li class="nav-item">
            <a class="nav-link px-4 py-2 fw-semibold @(tabId == defaultTab ? "active" : "")"
               href="javascript:void(0);" id="@tabId-tab" onclick="openTab('@tabId')">
                @status
            </a>
        </li>
    }
</ul>

<!-- Tab Content -->
<div class="tab-content mt-4">
    @foreach (var status in new[] { (1, "Pending Confirmation"), (2, "Confirmed"), (3, "Shipping"), (4, "Delivered"), (5, "Cancelled"), (6, "Returned") })
    {
        string tabId = status.Item2.Replace(" ", "").ToLower();
        var filteredOrders = Model.Where(o => o.Status == status.Item1);

        <div class="tab-pane fade @(tabId == defaultTab ? "show active" : "")" id="@tabId" role="tabpanel">
            @if (filteredOrders.Any())
            {
                <div class="order-list">
                    @foreach (var order in filteredOrders)
                    {
                        <div class="order-item">
                            <div class="order-info">
                                <div class="order-id">
                                    <strong>Order #@order.Id</strong>
                                </div>
                                <div class="order-date">
                                    <strong>Date:</strong> @order.OrderDate?.ToString("yyyy-MM-dd")
                                </div>
                                <div class="order-total">
                                    <strong>Total:</strong> @string.Format("{0:N0} vn₫", order.TotalAmount)
                                </div>
                                @if (order.CanReview)
                                {
                                    <div class="order-review">
                                        <p style="font-size: 9px">*Hãy đánh giá sản phẩm để chúng tôi có thể cung cấp dịch vụ tốt hơn!</p>
                                    </div>
                                }
                                <a href="@Url.Action("Details", "Orders", new { id = order.Id })" class="btn btn-primary rounded-3">
                                    View Details
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-center text-muted fs-5 py-4">No <span class="fw-bold">@status.Item2</span> orders available.</p>
            }
        </div>
    }
</div>

<!-- Custom Styles -->
<style>
    /* General */
    body {
        background-color: #f8f9fa;
    }

    /* Tabs */
    .nav-tabs {
        border-bottom: 2px solid #dee2e6;
    }

        .nav-tabs .nav-item {
            margin-bottom: -1px;
        }

        .nav-tabs .nav-link {
            border-radius: 10px 10px 0 0;
            background: #e9ecef;
            color: #495057;
            transition: all 0.3s ease-in-out;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
        }

            /* Active Tab (Clicked Tab) */
            .nav-tabs .nav-link.active {
                background: black; /* Yellow background for the active tab */
                color: #fff3b0; /* Black text for the active tab */
                font-weight: bold;
                border-bottom: 2px solid black;
            }

            /* Inactive Tabs */
            .nav-tabs .nav-link:not(.active) {
                background: #e9ecef;
                color: #495057;
            }

    /* Order List */
    .order-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .order-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        background-color: #fff;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    }

    /* Order Info */
    .order-info {
        display: flex;
        justify-content: space-between;
        width: 100%;
        align-items: center;
    }

    .order-id, .order-date, .order-total {
        font-size: 14px;
        font-weight: bold;
    }

    .order-review {
        font-size: 9px;
        color: #6c757d;
    }

    .btn-primary {
        background: #007bff;
        border: none;
        padding: 8px 16px;
        font-size: 14px;
    }

        .btn-primary:hover {
            background: #0056b3;
        }

    /* Empty State */
    .tab-content .text-muted {
        font-size: 18px;
    }
</style>

<!-- Custom JavaScript -->
<script>
    // Function to open the corresponding tab
    function openTab(tabId) {
        // Hide all tabs
        var tabs = document.querySelectorAll('.tab-pane');
        tabs.forEach(tab => tab.classList.remove('show', 'active'));

        // Remove active class from all tab links
        var links = document.querySelectorAll('.nav-link');
        links.forEach(link => link.classList.remove('active'));

        // Show the clicked tab
        var activeTab = document.getElementById(tabId);
        activeTab.classList.add('show', 'active');

        // Add active class to the clicked tab link
        var activeLink = document.querySelector(`#${tabId}-tab`);
        activeLink.classList.add('active');
    }

    // Set the default tab (e.g., "delivered")
    document.addEventListener('DOMContentLoaded', function () {
        var defaultTab = '@defaultTab'; // Default tab passed from server-side
        openTab(defaultTab); // Open default tab
    });
</script>
