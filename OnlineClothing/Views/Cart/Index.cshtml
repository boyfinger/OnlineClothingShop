@model OnlineClothing.Models.Cart

<link rel="stylesheet" href="~/css/cart-index.css" asp-append-version="true" />

<div class="container my-4">
    <h2 class="text-center mb-4">Your Shopping Cart</h2>

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-info text-center">
            @ViewBag.Message
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Thumbnail</th>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartDetails)
                    {
                        <tr id="row-@item.ProductId">
                            <td>
                                <img src="@item.Product.ThumbnailUrl" alt="@item.Product.Name" class="img-thumbnail" style="width: 80px; height: 80px;">
                            </td>
                            <td>@item.Product.Name</td>
                            <td>
                                <input type="number" class="form-control text-center quantity-input" value="@item.Quantity" min="1" max="@item.Product.Quantity" data-product-id="@item.ProductId" style="width: 80px;">
                            </td>
                            <td>@string.Format("{0:N0} VND", item.Product.Price)</td>
                            <td class="total-price">@string.Format("{0:N0} VND", item.Quantity * item.Product.Price)</td>
                            <td>
                                <button class="btn btn-danger btn-sm remove-btn" data-product-id="@item.ProductId">
                                    <i class="fas fa-trash-alt"></i> Remove
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Customer Information -->
        <form id="checkoutForm" method="post" asp-action="CheckOut" asp-controller="Payment">
            <div class="mt-4">
                <h4>Shipping Information</h4>
                <div class="row g-3">
                    <div class="col-md-4">
                        <label for="FullName" class="form-label">Full Name</label>
                        <input type="text" name="FullName" id="FullName" class="form-control" value="@ViewBag.FullName" placeholder="Enter the receiver's name">
                        <span class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label for="PhoneNumber" class="form-label">Phone Number</label>
                        <input type="text" name="PhoneNumber" id="PhoneNumber" class="form-control" value="@ViewBag.PhoneNumber" placeholder="Enter the receiver's phone number">
                        <span class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label for="Address" class="form-label">Address</label>
                        <input type="text" name="Address" id="Address" class="form-control" value="@ViewBag.Address" placeholder="Enter the receiver's address">
                        <span class="text-danger"></span>
                    </div>
                    <div class="col-md-12">
                        <label for="Note" class="form-label">Note</label>
                        <textarea name="Note" id="Note" class="form-control" rows="3" placeholder="Any special instructions?"></textarea>
                    </div>
                </div>
            </div>
            <!-- Voucher Selection -->
            <div class="mt-4">
                <h4>Apply Voucher</h4>
                <select name="VoucherId" id="VoucherId" class="form-select">
                    <option value=@(0)>No Voucher</option>
                    @if (TempData["vouchers"] != null)
                    {
                        var vouchers = TempData["vouchers"] as List<OnlineClothing.Models.Voucher>;
                        @foreach (var voucher in vouchers)
                        {
                            int voucherValue = voucher.Value == null ? 0 : (int)voucher.Value;
                            if (voucher.TypeNavigation?.Id == 1)
                            {
                                <option value="@voucher.Id">@voucher.Code: Giảm @voucherValue %</option>
                            }
                            else if (voucher.TypeNavigation?.Id == 2)
                            {
                                <option value="@voucher.Id">@voucher.Code: Giảm @string.Format("{0:N0} VND", @voucherValue)</option>
                            }
                        }
                    }
                </select>
            </div>


            <!-- Checkout Button and Save Shipping Info -->
            <div class="d-flex justify-content-between align-items-center mt-4">
                <h4>
                    Total Amount:
                    <span id="total-amount" class="text-primary" data-original-total="@Model.TotalAmount">
                        @string.Format("{0:N0} VND", Model.TotalAmount)
                    </span>
                    <small id="discount-amount" class="text-danger ms-2" style="font-size: 0.9rem;">
                        <!-- Discounted amount will be updated dynamically -->
                    </small>
                </h4>

                <div class="d-flex align-items-center">
                    <div class="form-check me-3">
                        <input type="hidden" id="saveShippingInfoHidden" name="saveShippingInfo" value="false">
                        <input class="form-check-input" type="checkbox" id="saveShippingInfo" oninput="saveInfo()">
                        <label class="form-check-label" for="saveShippingInfo">Save Shipping Information</label>
                    </div>

                    <button type="submit" id="checkoutBtn" class="btn btn-success btn-lg">
                        <i class="fas fa-shopping-cart"></i> Proceed to Checkout
                    </button>
                </div>
            </div>

        </form>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://kit.fontawesome.com/your-kit-code.js" crossorigin="anonymous"></script> <!-- FontAwesome Icons -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const voucherSelect = document.getElementById("VoucherId");
        const totalAmountElement = document.getElementById("total-amount");
        const discountAmountElement = document.getElementById("discount-amount");
        const originalTotal = parseInt(totalAmountElement.dataset.originalTotal);

        voucherSelect.addEventListener("change", function () {
            let discount = 0;
            let selectedOption = voucherSelect.options[voucherSelect.selectedIndex];

            if (selectedOption.value) {
                let text = selectedOption.textContent;
                if (text.includes("%")) {
                    discount = parseInt(text.match(/\d+/)[0]) / 100 * originalTotal;
                } else if (text.includes("VND")) {
                    discount = parseInt(text.match(/\d+/)[0]) * 1000;
                }
            }

            let newTotal = originalTotal - discount;
            totalAmountElement.textContent = newTotal.toLocaleString() + " VND";
            discountAmountElement.textContent = discount > 0 ? `-${discount.toLocaleString()} VND` : "";
        });
    });
</script>



<script>
    document.getElementById("checkoutForm").addEventListener("submit", function (event) {
        let isValid = true;

        // Select all input fields to validate
        const fields = ["FullName", "PhoneNumber", "Address"];

        fields.forEach(field => {
            const input = document.getElementById(field);
            const errorSpan = input.nextElementSibling;

            if (input.value.trim() === "") {
                errorSpan.textContent = field + " is cannot be emtpy";
                errorSpan.style.display = "block";
                isValid = false;
            } else {
                errorSpan.textContent = "";
                errorSpan.style.display = "none";
            }
        });

        // Prevent form submission if validation fails
        if (!isValid) {
            event.preventDefault();
        }
    });

    $(document).ready(function () {
        $(".remove-btn").click(function () {
            var productId = $(this).data("product-id");
            var row = $("#row-" + productId);

            $.ajax({
                url: "/Cart/Remove",
                type: "POST",
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        row.fadeOut(300, function () { $(this).remove(); });
                        $("#total-amount").text(response.totalAmount);
                    } else if (response.redirectUrl) {
                        window.location.href = response.redirectUrl;
                    }
                },
                error: function () {
                    alert("Failed to remove product from cart.");
                }
            });
        });

        $(".quantity-input").on("change", function () {
            var productId = $(this).data("product-id");
            var newQuantity = $(this).val();
            var row = $("#row-" + productId);

            $.ajax({
                url: "/Cart/UpdateQuantity",
                type: "POST",
                data: { productId: productId, quantity: newQuantity },
                success: function (response) {
                    if (response.success) {
                        row.find(".total-price").text(response.newTotalPrice);
                        $("#total-amount").text(response.totalAmount);
                    }
                },
                error: function () {
                    alert("Failed to update quantity.");
                }
            });
        });
    });

    function saveInfo() {
        let isChecked = document.getElementById("saveShippingInfo").checked;
        let save = document.getElementById("saveShippingInfoHidden");
        if (isChecked) {
            save.value = "true";
        } else save.value = "false";
    }
</script>
